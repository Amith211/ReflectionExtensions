# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: build
  jobs:
  - job: build
    displayName: 'Run Build'
    pool:
      Default
      #vmImage: 'windows-latest'
    steps:
    - task: GitVersion@4
      inputs:
        preferBundledVersion: true

    - task: Powershell@2
      inputs:
        targetType: inline
        script: gci env:*Git* | sort-object name;

    - task: DotNetCoreInstaller@0
      inputs:
        version: '2.2.300'

    #- task: NuGetToolInstaller@0 # Doesn't require exact Version live above task

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
    #  inputs:
    #    command: 'restore'
    #    #projects: '**/*.csproj'
    #    feedsToUse: 'select'
      
      #script: dotnet restore

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        arguments: '--configuration $(BuildConfiguration)'
        #arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

#    - task: CopyFiles@2
#      inputs:
#        SourceFolder: '$(Build.SourcesDirectory)'
#        Contents: '**/bin/**'
#        TargetFolder: '$(build.artifactstagingdirectory)\pipelinestest'
        #flattenFolders: true
#        OverWrite: true

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact drop'
      inputs:
        artifactName: 'drop'
        targetPath: '$(Build.SourcesDirectory)'
        #targetPath: '$(Build.ArtifactStagingDirectory)'


#    - task: PublishPipelineArtifact@0
#      displayName: 'Publish Artifact drop'
#      inputs:
#        artifactName: '.netstandard2.0'
#        targetPath: '$(build.artifactstagingdirectory)/netstandard2.0'
    
#    - task: PublishPipelineArtifact@0
#      displayName: 'Publish Artifact drop'
#      inputs:
#        artifactName: '.netcore2.2'
#        targetPath: '$(build.artifactstagingdirectory)/netcoreapp2.2'
        
- stage: Test
  jobs:
  - job: Test
    displayName: 'Run Tests'
    pool:
      default
      #vmImage: 'windows-latest'
    steps:  
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'drop'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--logger trx --collect "Code coverage"'
        nobuild: true

- stage: Deploy
  jobs:
  - job: Nuget
    displayName: 'Deploy to Nuget.org preview'
    pool:
      Default
      #vmImage: 'windows-latest'
    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'drop'
        targetPath: $(Build.ArtifactStagingDirectory)
        #targetPath: '$(Build.SourcesDirectory)'

    - task: Powershell@2
      inputs:
        targetType: inline
        script: gci env:*Git* | sort-object name;

    - task: Powershell@2
      inputs:
        targetType: inline
        script: dotnet restore; dotnet pack --no-build --no-restore -property:Configuration=Release,version=$env:GitVersion_NuGetVersionV2
        #script: dotnet pack --no-build --no-restore -property:Configuration=Release,version=$env:GitVersion_NuGetVersionV2
        workingDirectory: $(Build.ArtifactStagingDirectory)

#    - task: DotNetCoreCLI@2
#      inputs:
#        command: 'custom'
#        custom: pack
#        arguments: '--no-build --no-restore -property:Configuration=Release,version=$(GitVersion.NuGetVersionV2)'
#        #command: 'pack'
#        packagesToPack: '**/$(Build.ArtifactStagingDirectory)/*.sln'
#        #packagesToPack: '**/$(Build.ArtifactStagingDirectory)/src/**/*.csproj'
#        #nobuild: true
#        #buildProperties: 'Version=$(GitVersion.NuGetVersionV2)'
