# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: build
  jobs:
  - job: build
    displayName: 'Run build'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DotNetCoreInstaller@0
      inputs:
        version: '2.2'

    #- task: NuGetToolInstaller@0

#    - task: NuGetCommand@2
#      inputs:
#        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        configuration: '$(buildConfiguration)'
        arguments: 
          solution'$(solution)'
        
        
#    - task: VSBuild@1
#      inputs:
#        solution: '$(solution)'
#        #msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#        msbuildArgs: '/t:restore;build'
#        platform: '$(buildPlatform)'
#        configuration: '$(buildConfiguration)'

#    - task: CopyFiles@2
#      inputs:
#        SourceFolder: '$(Build.SourcesDirectory)'
#        Contents: '**/bin/**'
#        TargetFolder: '$(build.artifactstagingdirectory)\pipelinestest'
        #flattenFolders: true
#        OverWrite: true

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact drop'
      inputs:
        artifactName: 'drop'
        #targetPath: '$(build.artifactstagingdirectory)'
        targetPath: '$(Build.SourcesDirectory)'


#    - task: PublishPipelineArtifact@0
#      displayName: 'Publish Artifact drop'
#      inputs:
#        artifactName: '.netstandard2.0'
#        targetPath: '$(build.artifactstagingdirectory)/netstandard2.0'
    
#    - task: PublishPipelineArtifact@0
#      displayName: 'Publish Artifact drop'
#      inputs:
#        artifactName: '.netcore2.2'
#        targetPath: '$(build.artifactstagingdirectory)/netcoreapp2.2'
        

      

- stage: test
  jobs:
  - job: test
    displayName: 'Run Tests'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'drop'
        #artifactName: '.netcore2.2'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Test*/*.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
        nobuild: true
        publishTestResults: true

#    - task: VSTest@2
#      displayName: 'Run Unit Tests'
#      inputs:
#        platform: '$(buildPlatform)'
#        configuration: '$(buildConfiguration)'
#        searchFolder: '$(build.artifactstagingdirectory)'
#        testAssemblyVer2: | 
#            **\$(buildConfiguration)\**\*tests*.dll
#            !**\*TestAdapter.dll
#            !**\obj\**
#        otherConsoleOptions: '/Framework:".NETCoreApp,Version=v2.2"'
#        codeCoverageEnabled: true
