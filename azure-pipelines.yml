# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  pool: 'Default'
  pushPreview: 'internal;nuget.org'
  nugetVersion: ""
  releaseSkip: 'true'

resources:
  repositories:
    - repository: templates
      type: github
      name: Amith211/azure-pipelines-templates
      ref: refs/heads/hotfix/fix_variables
      endpoint: Amith211

stages:
- template: .net/stages/build.yml@templates
  parameters:
    dotNetCoreInstallerVersion: '2.2.300'
    pool: $(pool)
    
- template: .net/stages/test.yml@templates

## Preview release ##

- stage: DeployPreview
  displayName: 'Deploy Preview'
  jobs:
  - job: NugetPackPreview
    displayName: 'Pack Nuget preview'
    pool:
      name: $(pool)
      #vmImage: 'windows-latest'
    steps:
    - checkout: none
    - template: .net/steps/load-variables.yml@templates

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'drop'
        #targetPath: $(Build.ArtifactStagingDirectory)
        targetPath: '$(Build.SourcesDirectory)'

    - task: Powershell@2
      name: SetNugetSemVerVersion
      displayName: SetNugetSemVerVersion
      inputs:
        targetType: inline
        script: |
            . $(Build.SourcesDirectory)/build/Set-NugetSemVersion.ps1
             Get-NugetVersion -IsPreview;

    - template: .net/steps/nuget-pack.yml@templates
      parameters:
        artifactName: 'nuget-preview'
        nugetPackageVersion: $(SetNugetSemVerVersion.nugetVersionOutput)
        #$(nugetVersion)

  - template: .net/jobs/nuget-push-to-azureArtifacts.yml@templates
    parameters:
      jobName: 'DeployNugetPreviewAzureArtifacts'
      jobDisplayName: 'Deploy Preview to Azure Artifacts'
      pool: ${{ variables.pool }}
      artifactName: 'nuget-preview'
      publishVstsFeed: '/b4573900-0d0d-4915-b6b5-cfc2fee08f7d'
      allowPackageConflicts: true

#  - template: .net/jobs/nuget-push-to-nuget.yml@templates
#    parameters:
#      jobName: 'DeployNugetPreview'
#      jobDisplayName: 'Deploy to Nuget.org'
#      pool: ${{ variables.pool }}
#      artifactName: 'nuget-preview'
#      publishFeedCredentials: 'Nuget.org'
#      allowPackageConflicts: true

## Stable Release ##

- stage: DeployRelease
  displayName: 'Deploy Release'
  jobs:
  - job: NugetPackRelease
    displayName: 'Pack Nuget Release'
    pool:
      name: ${{ variables.pool }}
      #vmImage: 'windows-latest'
    steps:
    - checkout: none
    - template: .net/steps/load-variables.yml@templates

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'drop'
        #targetPath: $(Build.ArtifactStagingDirectory)
        targetPath: '$(Build.SourcesDirectory)'

    - task: Powershell@2
      name: SetNugetSemVerVersion
      displayName: SetNugetSemVerVersion
      inputs:
        targetType: inline
        script: |
            . $(Build.SourcesDirectory)/build/Set-NugetSemVersion.ps1
             Get-NugetVersion;

    - template: .net/steps/nuget-pack.yml@templates
      #dependsOn: SetNugetSemVerVersion
      parameters:
        artifactName: 'nuget'
        nugetPackageVersion: $(SetNugetSemVerVersion.nugetVersionOutput)
        #$(nugetVersion)

  - template: .net/jobs/nuget-push-to-azureArtifacts.yml@templates
    #dependsOn: 'SetNugetSemVerVersion'
    parameters:
      jobName: 'DeployNugetAzureArtifacts'
      jobDisplayName: 'Deploy to Azure Artifacts'
      pool: ${{ variables.pool }}
      artifactName: 'nuget'
      publishVstsFeed: '/b4573900-0d0d-4915-b6b5-cfc2fee08f7d'
      allowPackageConflicts: true

  - template: .net/jobs/nuget-push-to-nuget.yml@templates
    #dependsOn: 'SetNugetSemVerVersion'
    parameters:
      jobName: 'DeployNuget'
      jobDisplayName: 'Deploy to Nuget.org'
      pool: ${{ variables.pool }}
      artifactName: 'nuget'
      publishFeedCredentials: 'Nuget.org'
      allowPackageConflicts: true
      nugetPackageVersion: $(DeployRelease.SetNugetSemVerVersion.nugetVersionOutput)
      #$(nugetVersion)
  condition: > 
        and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), 
          or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
            startswith(variables['Build.SourceBranch'], 'refs/heads/release/'),
            startswith(variables['Build.SourceBranch'], 'refs/heads/azure-pipelines-test')) )
##condition run only if master or release otherwise it is a prerelease allreay deployed in previous stage

          ## Task does not support API key yet.
          #- task: DotNetCoreCLI@2
          #  displayName: Publish Preview to Nuget.org
          #  inputs:
          #    command: 'push'
          #    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          #    nuGetFeedType: 'internal'
          #    publishVstsFeed: '/b4573900-0d0d-4915-b6b5-cfc2fee08f7d'
          #  condition: and(succeeded(), , ne(variables['Build.Reason'], 'PullRequest'), contains(variables['pushPreview'], 'nuget.org'))